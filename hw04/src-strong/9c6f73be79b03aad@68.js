function _1(md){return(
md`# HW04 strong`
)}

function _artist(__query,FileAttachment,invalidation){return(
__query(FileAttachment("artist-1-1.csv"),{select:{columns:null},from:{table:"artist-1-1"},filter:[],sort:[],slice:{from:null,to:null}},invalidation)
)}

function _innerCircleQuestion2(artist){return(
Object.keys(artist[0])[2]
)}

function _outerCircleQuestion2(artist){return(
Object.keys(artist[0])[1]
)}

function _data2(artist,innerCircleQuestion2,outerCircleQuestion2,buildHierarchy2)
{
  // 提取內外圈問題的答案
  var innerCircleAnswer2 = artist.map(row => row[innerCircleQuestion2]);
  var outerCircleAnswer2 = artist.map(row => row[outerCircleQuestion2]);

  // 將內外圈答案結合，形成新的答案陣列
  var combinedAnswers2 = innerCircleAnswer2.map((innerAns, index) => innerAns + '-' + outerCircleAnswer2[index]);

  // 重新格式化答案，將其轉換為符合特定模式的陣列
  var reformattedAnswers2 = combinedAnswers2.map(item => {
    const [prefix, values] = item.split('-');
    const splitValues = values.split(';').map(value => value.trim());
    return splitValues.map(value => `${prefix}-${value}`);
  }).reduce((acc, curr) => acc.concat(curr), []);

  // 計算每個重新格式化答案的出現次數
  var answerCounts = {};
  reformattedAnswers2.forEach(reformattedAns => {
    answerCounts[reformattedAns] = (answerCounts[reformattedAns] || 0) + 1;
  });

  // 轉換為CSV格式的數據
  var csvData = Object.entries(answerCounts).map(([answer, count]) => [answer, String(count)]);
  
  // 建立包含層次結構的數據
  return buildHierarchy2(csvData);
}


function _breadcrumb2(d3,breadcrumbWidth,breadcrumbHeight,sunburst2,breadcrumbPoints,color2)
{
  const svg = d3
    .create("svg")
    .attr("viewBox", `0 0 ${breadcrumbWidth * 10} ${breadcrumbHeight}`)
    .style("font", "12px sans-serif")
    .style("margin", "5px");

  const g = svg
    .selectAll("g")
    .data(sunburst2.sequence)
    .join("g")
    .attr("transform", (d, i) => `translate(${i * breadcrumbWidth}, 0)`);

    g.append("polygon")
      .attr("points", breadcrumbPoints)
      .attr("fill", d => color2(d.data.name))
      .attr("stroke", "white");

    g.append("text")
      .attr("x", (breadcrumbWidth + 10) / 2)
      .attr("y", 15)
      .attr("dy", "0.35em")
      .attr("text-anchor", "middle")
      .attr("fill", "white")
      .text(d => {
        if(d.data.name === "減少包裝材及文宣印製") {
          return "減少包裝";
        }
        else if(d.data.name === "使用無毒媒材、再生材料、廢物利用素材等") {
          return "使用再生材料";
        }
        else if(d.data.name === "工作場所、活動展場的節約能源") {
          return "節約能源";
        }
        else if(d.data.name.length > 6)
        {
          return "其他答案";
        }
        return d.data.name;
      });

  svg
    .append("text")
    .text(sunburst2.percentage > 0 ? sunburst2.percentage + "%" : "")
    .attr("x", (sunburst2.sequence.length + 0.5) * breadcrumbWidth)
    .attr("y", breadcrumbHeight / 2)
    .attr("dy", "0.35em")
    .attr("text-anchor", "middle");

  return svg.node();
}


function _sunburst2(partition,data2,d3,radius,innerCircleQuestion2,outerCircleQuestion2,width,color2,arc,mousearc)
{
  const root = partition(data2);
  const svg = d3.create("svg");
  // Make this into a view, so that the currently hovered sequence is available to the breadcrumb
  const element = svg.node();
  element.value = { sequence: [], percentage: 0.0 };

  // 使用foreignObject插入HTML
  const fo = svg
    .append("foreignObject")
    .attr("x", `${radius+50}px`)
    .attr("y", -10)
    .attr("width", radius*2)
    .attr("height", 350);
  
  const div = fo
    .append("xhtml:div")
    .style("color2","#555")
    .style("font-size", "25px")
    .style("font-family", "Arial");

  d3.selectAll("div.tooltip").remove(); // clear tooltips from before
  const tooltip = d3
    .select("body")
    .append("div")
    .attr("class", `tooltip`)
    .style("position", "absolute")
    .style("opacity", 0)

  const label = svg
    .append("text")
    .attr("text-anchor", "middle");
    //.style("visibility", "hidden");

  label//內圈問題
    .append("tspan")
    .attr("class", "question1")
    .attr("x", 0)
    .attr("y", 0)
    .attr("dx", `${radius*2+50}px`)
    .attr("dy", "-6em")
    .attr("font-size", "2.5em")
    .attr("fill", "#BBB")
    .text(innerCircleQuestion2);

  label//外圈問題
    .append("tspan")
    .attr("class", "question2")
    .attr("x", 0)
    .attr("y", 0)
    .attr("dx", `${radius*2+50}px`)
    .attr("dy", "-4em")
    .attr("font-size", "2.5em")
    .attr("fill", "#BBB")
    .text(outerCircleQuestion2);

  label//答案
    .append("tspan")
    .attr("class", "sequence")
    .attr("x", 0)
    .attr("y", 0)
    .attr("dx", `${radius*2+50}px`)
    .attr("dy", "-1em")
    .attr("font-size", "2.5em")
    .text("");

  label//占比%數
    .append("tspan")
    .attr("class", "percentage")
    .attr("x", 0)
    .attr("y", 0)
    .attr("dx", 0)
    .attr("dy", "0em")
    .attr("font-size", "5em")
    .attr("fill", "#555")
    .text("");

  label//數量
    .append("tspan")
    .attr("class", "dataValue")
    .attr("x", 0)
    .attr("y", 0)
    .attr("dx", 0)
    .attr("dy", "2em")
    .attr("font-size", "2em")
    .attr("fill", "#555")
    .text("");

  svg
    .attr("viewBox", `${-radius} ${-radius} ${width*2.2} ${width}`)
    .style("max-width", `${width*2}px`)
    .style("font", "12px sans-serif");

  const path = svg
    .append("g")
    .selectAll("path")
    .data(
      root.descendants().filter(d => {
        // Don't draw the root node, and for efficiency, filter out nodes that would be too small to see
        return d.depth && d.x1 - d.x0 > 0.001;
      })
    )
    .join("path")
    .attr("fill", d => color2(d.data.name))
    .attr("d", arc);

  svg
    .append("g")
    .attr("fill", "none")
    .attr("pointer-events", "all")
    .on("mouseleave", () => {
      path.attr("fill-opacity", 1);
      //tooltip.text("");
      //label.style("visibility", null);
      // Update the value of this view
      element.value = { sequence: [], percentage: 0.0 };
      element.dispatchEvent(new CustomEvent("input"));
    })
    .selectAll("path")
    .data(
      root.descendants().filter(d => {
        // Don't draw the root node, and for efficiency, filter out nodes that would be too small to see
        return d.depth && d.x1 - d.x0 > 0.001;
      })
    )
    .join("path")
    .attr("d", mousearc)
    .on("mouseover", (_evt, d) => {
      if(d.data.name === "美術館") {
        tooltip
        .style("opacity", 1)
        .html(`美術館<br><svg width=64px" height="64px" viewBox="0 -8 1040 1040" class="icon"  version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M1011.952941 445.741176H36.141176L512.401569 16.062745z" fill="#EDF2F8" /><path d="M1011.952941 461.803922H36.141176c-6.425098 0-12.850196-4.015686-15.259607-10.440785-2.409412-6.425098-0.803137-12.850196 4.015686-17.669019L501.157647 4.015686c5.621961-5.621961 15.259608-5.621961 20.881569 0L1022.393725 433.694118c4.818824 4.015686 7.228235 11.243922 4.818824 17.669019-2.409412 6.425098-8.83451 10.440784-15.259608 10.440785z m-934.048627-32.125491h890.679215L512.401569 37.747451 77.904314 429.678431z" fill="#131313" /><path d="M518.826667 221.665882m-77.904314 0a77.904314 77.904314 0 1 0 155.808627 0 77.904314 77.904314 0 1 0-155.808627 0Z" fill="#C2CDDC" /><path d="M518.826667 314.829804c-51.400784 0-93.967059-41.763137-93.967059-93.967059s41.763137-93.967059 93.967059-93.967059c51.400784 0 93.967059 41.763137 93.967058 93.967059S570.227451 314.829804 518.826667 314.829804z m0-155.00549c-33.731765 0-61.841569 27.306667-61.841569 61.841568s27.306667 61.841569 61.841569 61.841569c33.731765 0 61.841569-27.306667 61.841568-61.841569s-28.109804-61.841569-61.841568-61.841568z" fill="#131313" /><path d="M38.550588 445.741176h962.158432c12.850196 0 22.487843 10.440784 22.487843 22.487844v20.881568c0 12.850196-10.440784 22.487843-22.487843 22.487843H38.550588c-12.850196 0-22.487843-10.440784-22.487843-22.487843v-20.881568c0-12.047059 10.440784-22.487843 22.487843-22.487844z" fill="#FFFFFF" /><path d="M1001.512157 528.464314H38.550588C16.865882 528.464314 0 510.795294 0 489.913725v-20.881568c0-21.684706 17.66902-38.550588 38.550588-38.550588h962.158432c21.684706 0 38.550588 17.66902 38.550588 38.550588V489.913725c0.803137 20.881569-16.865882 38.550588-37.747451 38.550589zM38.550588 461.803922c-4.015686 0-6.425098 3.212549-6.425098 6.425098v20.881568c0 4.015686 3.212549 6.425098 6.425098 6.425098h962.158432c4.015686 0 6.425098-3.212549 6.425098-6.425098v-20.881568c0-4.015686-3.212549-6.425098-6.425098-6.425098H38.550588z" fill="#131313" /><path d="M158.218039 511.598431h131.71451v40.156863c0 12.850196-10.440784 22.487843-22.487843 22.487843H181.50902c-12.850196 0-22.487843-10.440784-22.487844-22.487843v-40.156863h-0.803137z" fill="#C2CDDC" /><path d="M267.444706 591.10902H181.50902c-21.684706 0-38.550588-17.66902-38.550589-38.550589v-40.156862c0-8.83451 7.228235-16.062745 16.062745-16.062745h131.71451c8.83451 0 16.062745 7.228235 16.062745 16.062745v40.156862c-0.803137 20.881569-17.66902 38.550588-39.353725 38.550589z m-93.163922-63.447844v24.094118c0 4.015686 3.212549 6.425098 6.425098 6.425098h86.738824c4.015686 0 6.425098-3.212549 6.425098-6.425098v-24.094118H174.280784z" fill="#131313" /><path d="M181.50902 816.790588h86.738823c12.850196 0 22.487843 10.440784 22.487843 22.487843v40.156863H158.218039v-40.156863c0-12.850196 10.440784-22.487843 23.290981-22.487843z" fill="#C2CDDC" /><path d="M289.932549 895.498039H158.218039c-8.83451 0-16.062745-7.228235-16.062745-16.062745v-40.156863c0-21.684706 17.66902-38.550588 38.550588-38.550588h86.738824c21.684706 0 38.550588 17.66902 38.550588 38.550588v40.156863c0 8.83451-6.425098 16.062745-16.062745 16.062745z m-115.651765-32.12549h99.58902v-24.094118c0-4.015686-3.212549-6.425098-6.425098-6.425098H181.50902c-4.015686 0-6.425098 3.212549-6.425098 6.425098v24.094118z" fill="#131313" /><path d="M191.949804 575.046275h64.25098v241.744313h-64.25098z" fill="#F3F3F3" /><path d="M256.200784 832.853333h-64.25098c-8.83451 0-16.062745-7.228235-16.062745-16.062745V575.046275c0-8.83451 7.228235-16.062745 16.062745-16.062746h64.25098c8.83451 0 16.062745 7.228235 16.062745 16.062746v241.744313c0 8.83451-7.228235 16.062745-16.062745 16.062745z m-48.188235-32.12549h32.12549V591.10902h-32.12549v209.618823z" fill="#131313" /><path d="M348.561569 511.598431h131.714509v40.156863c0 12.850196-10.440784 22.487843-22.487843 22.487843H371.049412c-12.850196 0-22.487843-10.440784-22.487843-22.487843v-40.156863z" fill="#C2CDDC" /><path d="M457.788235 591.10902H371.049412c-21.684706 0-38.550588-17.66902-38.550588-38.550589V514.007843v-1.606274c0-8.83451 7.228235-16.062745 16.062745-16.062745h131.714509c8.83451 0 16.062745 7.228235 16.062746 16.062745v40.156862c0 20.881569-17.66902 38.550588-38.550589 38.550589z m-93.163921-63.447844v24.094118c0 4.015686 3.212549 6.425098 6.425098 6.425098H457.788235c4.015686 0 6.425098-3.212549 6.425098-6.425098v-24.094118H364.624314z" fill="#131313" /><path d="M371.049412 816.790588h85.935686c12.850196 0 22.487843 10.440784 22.487843 22.487843v40.156863H348.561569v-40.156863c0-12.850196 9.637647-22.487843 22.487843-22.487843z" fill="#C2CDDC" /><path d="M480.276078 895.498039H348.561569c-8.83451 0-16.062745-7.228235-16.062745-16.062745v-40.156863c0-21.684706 17.66902-38.550588 38.550588-38.550588H457.788235c21.684706 0 38.550588 17.66902 38.550589 38.550588v40.156863c0 8.83451-7.228235 16.062745-16.062746 16.062745z m-115.651764-32.12549h99.589019v-24.094118c0-4.015686-3.212549-6.425098-6.425098-6.425098H371.049412c-4.015686 0-6.425098 3.212549-6.425098 6.425098v24.094118z" fill="#131313" /><path d="M382.293333 575.046275h64.250981v241.744313h-64.250981z" fill="#F3F3F3" /><path d="M446.544314 832.853333h-64.250981c-8.83451 0-16.062745-7.228235-16.062745-16.062745V575.046275c0-8.83451 7.228235-16.062745 16.062745-16.062746h64.250981c8.83451 0 16.062745 7.228235 16.062745 16.062746v241.744313c0 8.83451-7.228235 16.062745-16.062745 16.062745z m-48.188236-32.12549h32.125491V591.10902h-32.125491v209.618823z" fill="#131313" /><path d="M546.936471 511.598431h131.714509v40.156863c0 12.850196-10.440784 22.487843-22.487843 22.487843H569.424314c-12.850196 0-22.487843-10.440784-22.487843-22.487843v-40.156863z" fill="#C2CDDC" /><path d="M656.163137 591.10902H570.227451c-21.684706 0-38.550588-17.66902-38.550588-38.550589V514.007843v-1.606274c0-8.83451 7.228235-16.062745 16.062745-16.062745h131.71451c8.83451 0 16.062745 7.228235 16.062745 16.062745v40.156862c-0.803137 20.881569-17.66902 38.550588-39.353726 38.550589z m-93.163921-63.447844v24.094118c0 4.015686 3.212549 6.425098 6.425098 6.425098h86.738823c4.015686 0 6.425098-3.212549 6.425098-6.425098v-24.094118H562.999216z" fill="#131313" /><path d="M569.424314 816.790588h85.935686c12.850196 0 22.487843 10.440784 22.487843 22.487843v40.156863H546.936471v-40.156863c0-12.850196 10.440784-22.487843 22.487843-22.487843z" fill="#C2CDDC" /><path d="M678.65098 895.498039H546.936471c-8.83451 0-16.062745-7.228235-16.062746-16.062745v-40.156863c0-21.684706 17.66902-38.550588 38.550589-38.550588h86.738823c21.684706 0 38.550588 17.66902 38.550588 38.550588v40.156863c0 8.83451-7.228235 16.062745-16.062745 16.062745z m-115.651764-32.12549h99.589019v-24.094118c0-4.015686-3.212549-6.425098-6.425098-6.425098H569.424314c-4.015686 0-6.425098 3.212549-6.425098 6.425098v24.094118z" fill="#131313" /><path d="M580.668235 575.046275h64.250981v241.744313h-64.250981z" fill="#F3F3F3" /><path d="M644.919216 832.853333h-64.250981c-8.83451 0-16.062745-7.228235-16.062745-16.062745V575.046275c0-8.83451 7.228235-16.062745 16.062745-16.062746h64.250981c8.83451 0 16.062745 7.228235 16.062745 16.062746v241.744313c0 8.83451-7.228235 16.062745-16.062745 16.062745z m-48.188236-32.12549h32.125491V591.10902h-32.125491v209.618823z" fill="#131313" /><path d="M738.083137 511.598431h131.71451v40.156863c0 12.850196-10.440784 22.487843-22.487843 22.487843H760.57098c-12.850196 0-22.487843-10.440784-22.487843-22.487843v-40.156863z" fill="#C2CDDC" /><path d="M847.309804 591.10902H760.57098c-21.684706 0-38.550588-17.66902-38.550588-38.550589V514.007843v-1.606274c0-8.83451 7.228235-16.062745 16.062745-16.062745h131.71451c8.83451 0 16.062745 7.228235 16.062745 16.062745v40.156862c0 20.881569-17.66902 38.550588-38.550588 38.550589z m-93.163922-63.447844v24.094118c0 4.015686 3.212549 6.425098 6.425098 6.425098h86.738824c4.015686 0 6.425098-3.212549 6.425098-6.425098v-24.094118H754.145882z" fill="#131313" /><path d="M760.57098 816.790588h86.738824c12.850196 0 22.487843 10.440784 22.487843 22.487843v40.156863H738.083137v-40.156863c0-12.850196 9.637647-22.487843 22.487843-22.487843z" fill="#C2CDDC" /><path d="M869.797647 895.498039H738.083137c-8.83451 0-16.062745-7.228235-16.062745-16.062745v-40.156863c0-21.684706 17.66902-38.550588 38.550588-38.550588h86.738824c21.684706 0 38.550588 17.66902 38.550588 38.550588v40.156863c0 8.83451-7.228235 16.062745-16.062745 16.062745z m-115.651765-32.12549h99.58902v-24.094118c0-4.015686-3.212549-6.425098-6.425098-6.425098H760.57098c-4.015686 0-6.425098 3.212549-6.425098 6.425098v24.094118z" fill="#131313" /><path d="M771.814902 575.046275h64.25098v241.744313h-64.25098z" fill="#F3F3F3" /><path d="M836.065882 832.853333h-64.25098c-8.83451 0-16.062745-7.228235-16.062745-16.062745V575.046275c0-8.83451 7.228235-16.062745 16.062745-16.062746h64.25098c8.83451 0 16.062745 7.228235 16.062745 16.062746v241.744313c0 8.83451-7.228235 16.062745-16.062745 16.062745z m-48.188235-32.12549h32.12549V591.10902h-32.12549v209.618823z" fill="#131313" /><path d="M107.620392 879.435294h821.609412c12.850196 0 22.487843 10.440784 22.487843 22.487843v62.644706c0 12.850196-10.440784 22.487843-22.487843 22.487843H107.620392c-12.850196 0-22.487843-10.440784-22.487843-22.487843v-62.644706c0-12.047059 9.637647-22.487843 22.487843-22.487843z" fill="#EDF2F8" /><path d="M930.032941 1003.118431H107.620392c-21.684706 0-38.550588-17.66902-38.550588-38.550588v-62.644706c0-21.684706 17.66902-38.550588 38.550588-38.550588h821.609412c21.684706 0 38.550588 17.66902 38.550588 38.550588v62.644706c0.803137 21.684706-16.865882 38.550588-37.747451 38.550588zM107.620392 895.498039c-4.015686 0-6.425098 3.212549-6.425098 6.425098v62.644706c0 4.015686 3.212549 6.425098 6.425098 6.425098h821.609412c4.015686 0 6.425098-3.212549 6.425098-6.425098v-62.644706c0-4.015686-3.212549-6.425098-6.425098-6.425098H107.620392z" fill="#131313" /><path d="M38.550588 942.08h962.158432c12.850196 0 22.487843 10.440784 22.487843 22.487843v20.881569c0 12.850196-10.440784 22.487843-22.487843 22.487843H38.550588c-12.850196 0-22.487843-10.440784-22.487843-22.487843v-20.881569c0-12.047059 10.440784-22.487843 22.487843-22.487843z" fill="#EDF2F8" /><path d="M1001.512157 1024H38.550588c-21.684706 0-38.550588-17.66902-38.550588-38.550588v-20.881569c0-21.684706 17.66902-38.550588 38.550588-38.550588h962.158432c21.684706 0 38.550588 17.66902 38.550588 38.550588v20.881569c0.803137 21.684706-16.865882 38.550588-37.747451 38.550588zM38.550588 958.142745c-4.015686 0-6.425098 3.212549-6.425098 6.425098v20.881569c0 4.015686 3.212549 6.425098 6.425098 6.425098h962.158432c4.015686 0 6.425098-3.212549 6.425098-6.425098v-20.881569c0-4.015686-3.212549-6.425098-6.425098-6.425098H38.550588z" fill="#131313" /></svg>`)
        .style("border-color", color2(d.data.name));
      }
      else if(d.data.name === "工作室") {
        tooltip
        .style("opacity", 1)
        .html(`工作室<br><?xml version="1.0" encoding="utf-8"?><svg width="64px" height=64px" viewBox="0 0 1024 1024" class="icon"  version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M602.587685 727.095869c7.981294-58.263445 57.465316-115.728761 73.427903-131.691348 94.977397-91.784879 97.371785-242.631333 5.586906-337.60873s-243.429462-97.371785-338.406859-5.586906-97.371785 243.429462-5.586905 338.406859l5.586905 5.586906c15.962588 15.164458 65.44661 72.629774 73.427904 131.691348 1.596259 17.558846 3.192518 35.117693 2.394388 51.87841h180.377241c0.798129-17.558846 1.596259-35.117693 3.192517-52.676539z" fill="#FFECBA" /><path d="M600.193297 795.734996H419.017927c-3.990647 0-7.981294-1.596259-11.173812-4.788776-3.192518-3.192518-4.788776-7.183164-4.788776-11.173812 0-16.760717-0.798129-33.521434-2.394388-50.282151-7.183164-51.87841-51.87841-105.353079-68.639127-122.113796l-5.586906-5.586905c-47.887763-48.685892-73.427903-113.334373-71.831644-181.9735s28.732658-131.691348 77.41855-179.579111 113.334373-73.427903 181.973499-71.831645c67.840998 0.798129 131.691348 28.732658 179.579112 77.41855s73.427903 113.334373 71.831645 181.9735c-0.798129 67.840998-28.732658 131.691348-77.418551 179.579111-15.962588 15.164458-61.455963 69.437256-68.639127 122.113796-1.596259 16.760717-3.192518 33.521434-2.394388 50.282151 0 3.990647-1.596259 7.981294-4.788776 11.173812-3.990647 3.192518-7.981294 4.788776-11.971941 4.788776z m-165.212783-31.925175h149.250195c0-12.77007 1.596259-25.54014 2.394388-38.310211 10.375682-74.226033 77.41855-139.672642 78.21668-140.470771 43.098987-41.502728 67.042868-97.371785 67.840998-157.231489 0.798129-59.859704-21.549493-116.52689-63.052222-158.827748-41.502728-43.098987-97.371785-67.042868-157.231488-67.840997C453.33749 199.532346 396.670304 221.879969 354.369447 263.382697c-43.098987 41.502728-67.042868 97.371785-67.840998 157.231489-0.798129 59.859704 21.549493 116.52689 63.052221 158.827747l4.788777 4.788776c0.798129 0.798129 67.840998 67.042868 78.216679 140.470772 1.596259 13.5682 2.394388 26.33827 2.394388 39.10834z" fill="" /><path d="M418.219797 902.684334c-2.394388 53.474669 37.512081 99.766173 91.78488 105.353078 53.474669-4.788776 94.179267-51.080281 91.784879-105.353078 0-39.906469-1.596259-85.399844-1.596259-123.710055H419.017927c0.798129 38.31021-0.798129 83.803585-0.79813 123.710055z" fill="#B2DAF6" /><path d="M510.004677 1024h-1.596259c-62.254092-5.586906-108.545596-59.061574-106.151208-121.315666 0-18.356976 0-37.512081 0.798129-55.869057 0-22.347623 0.798129-46.291504 0.798129-67.042869 0-3.990647 1.596259-7.981294 4.788777-11.173811 3.192518-3.192518 7.183164-4.788776 11.173811-4.788776h181.17537c3.990647 0 7.981294 1.596259 11.173812 4.788776 3.192518 3.192518 4.788776 7.183164 4.788776 11.173811 0 19.953235 0 43.098987 0.798129 65.44661 0 19.155105 0.798129 39.10834 0.79813 57.465316 2.394388 62.254092-43.897116 115.728761-106.949338 121.315666h-1.596258z m-75.024163-228.265004c0 16.760717 0 34.319564-0.798129 51.080281 0 19.155105-0.798129 38.31021-0.798129 55.869057v0.798129c-1.596259 44.695246 31.127046 83.005456 75.822291 88.592362 44.695246-4.788776 78.21668-43.098987 75.822292-88.592362 0-19.155105 0-38.31021-0.79813-57.465316 0-16.760717-0.798129-34.319564-0.798129-50.282151H434.980514zM418.219797 902.684334z" fill="" /><path d="M633.714731 795.734996H378.313328c-8.779423 0-15.962588-7.183164-15.962588-15.962588s7.183164-15.962588 15.962588-15.962587h255.401403c8.779423 0 15.962588 7.183164 15.962588 15.962587s-7.183164 15.962588-15.962588 15.962588zM601.789556 861.181606H418.219797c-8.779423 0-15.962588-7.183164-15.962587-15.962588s7.183164-15.962588 15.962587-15.962588h183.569759c8.779423 0 15.962588 7.183164 15.962587 15.962588s-7.183164 15.962588-15.962587 15.962588zM601.789556 919.445051H418.219797c-8.779423 0-15.962588-7.183164-15.962587-15.962588s7.183164-15.962588 15.962587-15.962588h183.569759c8.779423 0 15.962588 7.183164 15.962587 15.962588s-7.183164 15.962588-15.962587 15.962588z" fill="" /><path d="M478.877631 795.734996c-8.779423 0-15.962588-7.183164-15.962588-15.962588 0-1.596259-2.394388-144.461419-2.394388-209.109898h-3.990647c-19.953235 0-34.319564-5.586906-43.897116-15.962588-8.779423-8.779423-12.77007-21.549493-11.971941-36.713952 0.798129-12.77007 7.183164-41.502728 50.282151-41.502728 12.77007 0 23.145752 3.192518 29.530787 10.375682 11.971941 11.971941 11.971941 29.530787 11.173812 50.282152v0.798129h31.925175V526.765394c0-31.925175 18.356976-49.484022 51.080281-49.484022 13.5682 0 24.742011 5.586906 32.723304 15.164458 6.385035 7.981294 10.375682 19.155105 10.375682 30.328917 0 23.943882-15.962588 48.685892-44.695245 48.685892h-17.558847v208.311769c0 8.779423-7.183164 15.962588-15.962587 15.962588s-15.962588-7.183164-15.962588-15.962588V571.460639h-31.925175c0.798129 63.850351 2.394388 206.715511 2.394388 208.311769 0.798129 8.779423-5.586906 15.962588-15.164458 15.962588z m77.41855-256.199532h17.558846c10.375682 0 12.77007-11.971941 12.77007-16.760717 0-3.990647-0.798129-7.981294-3.192517-10.375682-0.798129-1.596259-3.192518-3.192518-7.981294-3.192518-16.760717 0-19.155105 3.990647-19.155105 17.558847v12.77007z m-105.353079-30.328917c-17.558846 0-17.558846 5.586906-18.356976 11.971941 0 5.586906 0.798129 10.375682 3.192518 12.77007 3.192518 3.192518 11.173811 5.586906 20.751364 5.586906h3.990647v-0.79813c0-10.375682 0-25.54014-2.394388-27.934528-0.798129-0.798129-2.394388-1.596259-7.183165-1.596259zM332.819953 435.778644c-8.779423 0-15.962588-7.183164-15.962587-15.962588C316.857366 320.848012 398.266563 239.438815 498.032736 239.438815c8.779423 0 15.962588 7.183164 15.962587 15.962588s-7.183164 15.962588-15.962587 15.962588c-82.207327 0-149.250195 67.042868-149.250195 148.452065 0 8.779423-7.183164 15.962588-15.962588 15.962588zM153.240842 444.558067H98.968044c-8.779423 0-15.962588-7.183164-15.962588-15.962588s7.183164-15.962588 15.962588-15.962587h54.272798c8.779423 0 15.962588 7.183164 15.962587 15.962587s-7.183164 15.962588-15.962587 15.962588zM925.031956 444.558067h-54.272798c-8.779423 0-15.962588-7.183164-15.962587-15.962588s7.183164-15.962588 15.962587-15.962587h54.272798c8.779423 0 15.962588 7.183164 15.962588 15.962587s-7.183164 15.962588-15.962588 15.962588zM512.399065 85.399844c-8.779423 0-15.962588-7.183164-15.962588-15.962588V15.962588c0-8.779423 7.183164-15.962588 15.962588-15.962588s15.962588 7.183164 15.962587 15.962588v54.272798c0 8.779423-7.183164 15.164458-15.962587 15.164458z" fill="" /><path d="M234.650039 205.119252c-3.990647 0-7.981294-1.596259-11.173811-4.788777l-38.310211-38.31021c-6.385035-6.385035-6.385035-15.962588 0-22.347623 6.385035-6.385035 15.962588-6.385035 22.347623 0l38.31021 38.310211c6.385035 6.385035 6.385035 15.962588 0 22.347622-3.192518 3.192518-7.183164 4.788776-11.173811 4.788777z" fill="" /><path d="M781.368667 205.119252c-3.990647 0-7.981294-1.596259-11.173811-4.788777-6.385035-6.385035-6.385035-15.962588 0-22.347622l38.31021-38.310211c6.385035-6.385035 15.962588-6.385035 22.347623 0s6.385035 15.962588 0 22.347623l-38.31021 38.31021c-3.192518 3.192518-7.183164 4.788776-11.173812 4.788777z" fill="" /></svg>`)
        .style("border-color", color2(d.data.name));
      }
      else if(d.data.name === "校院") {
        tooltip
        .style("opacity", 1)
        .html(`校院<br><svg width="64px" height="64px" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M23 8V29.5H9.00001V8C8.99897 7.6698 9.0797 7.34448 9.235 7.05308C9.3903 6.76167 9.61533 6.51326 9.89001 6.33L14.89 3C15.2187 2.78072 15.6049 2.6637 16 2.6637C16.3951 2.6637 16.7813 2.78072 17.11 3L22.11 6.33C22.3847 6.51326 22.6097 6.76167 22.765 7.05308C22.9203 7.34448 23.001 7.6698 23 8Z" fill="#2E7D32"/>
<path d="M27 15.5H23V29.5H27C27.7956 29.5 28.5587 29.1839 29.1213 28.6213C29.6839 28.0587 30 27.2956 30 26.5V18.5C30 17.7044 29.6839 16.9413 29.1213 16.3787C28.5587 15.8161 27.7956 15.5 27 15.5Z" fill="#FF6F00"/>
<path d="M18 17.5H14C13.7348 17.5 13.4804 17.6054 13.2929 17.7929C13.1054 17.9804 13 18.2348 13 18.5V29.5H15V19.5H17V29.5H19V18.5C19 18.2348 18.8946 17.9804 18.7071 17.7929C18.5196 17.6054 18.2652 17.5 18 17.5Z" fill="#263238"/>
<path d="M18 10.5H14C13.7348 10.5 13.4804 10.3946 13.2929 10.2071C13.1054 10.0196 13 9.76522 13 9.5C13 9.23478 13.1054 8.98043 13.2929 8.79289C13.4804 8.60536 13.7348 8.5 14 8.5H18C18.2652 8.5 18.5196 8.60536 18.7071 8.79289C18.8946 8.98043 19 9.23478 19 9.5C19 9.76522 18.8946 10.0196 18.7071 10.2071C18.5196 10.3946 18.2652 10.5 18 10.5Z" fill="#F5F5F5"/>
<path d="M18 14.5H14C13.7348 14.5 13.4804 14.3946 13.2929 14.2071C13.1054 14.0196 13 13.7652 13 13.5C13 13.2348 13.1054 12.9804 13.2929 12.7929C13.4804 12.6054 13.7348 12.5 14 12.5H18C18.2652 12.5 18.5196 12.6054 18.7071 12.7929C18.8946 12.9804 19 13.2348 19 13.5C19 13.7652 18.8946 14.0196 18.7071 14.2071C18.5196 14.3946 18.2652 14.5 18 14.5Z" fill="#F5F5F5"/>
<path d="M14.91 2.99995L9.91 6.32995C9.63162 6.5109 9.40266 6.75831 9.2438 7.04986C9.08493 7.34141 9.00114 7.66793 9 7.99995V29.4899H16V2.69995C15.6157 2.69581 15.238 2.79976 14.91 2.99995Z" fill="#388E3C"/>
<path d="M14 17.49C13.7348 17.49 13.4804 17.5953 13.2929 17.7829C13.1054 17.9704 13 18.2248 13 18.49V29.49H15V19.49H16V17.49H14Z" fill="#37474F"/>
<path d="M14 8.48999C13.7348 8.48999 13.4804 8.59535 13.2929 8.78288C13.1054 8.97042 13 9.22477 13 9.48999C13 9.75521 13.1054 10.0096 13.2929 10.1971C13.4804 10.3846 13.7348 10.49 14 10.49H16V8.48999H14Z" fill="#F5F5F5"/>
<path d="M14 12.49C13.7348 12.49 13.4804 12.5953 13.2929 12.7829C13.1054 12.9704 13 13.2248 13 13.49C13 13.7552 13.1054 14.0096 13.2929 14.1971C13.4804 14.3846 13.7348 14.49 14 14.49H16V12.49H14Z" fill="#F5F5F5"/>
<path d="M5 15.49C4.60603 15.49 4.21593 15.5676 3.85195 15.7184C3.48797 15.8691 3.15726 16.0901 2.87868 16.3687C2.6001 16.6472 2.37913 16.978 2.22836 17.3419C2.0776 17.7059 2 18.096 2 18.49V26.49C2 27.2856 2.31607 28.0487 2.87868 28.6113C3.44129 29.1739 4.20435 29.49 5 29.49H9V15.49H5Z" fill="#F9A825"/>
<path d="M27 15.5H23V7.49996C22.9991 7.33526 22.9576 7.17331 22.8791 7.02851C22.8006 6.88371 22.6876 6.76055 22.55 6.66996L16.55 2.66996C16.3867 2.56243 16.1955 2.50513 16 2.50513C15.8045 2.50513 15.6133 2.56243 15.45 2.66996L9.45 6.66996C9.31244 6.76055 9.19938 6.88371 9.12088 7.02851C9.04237 7.17331 9.00085 7.33526 9 7.49996V15.5H5C4.20435 15.5 3.44129 15.816 2.87868 16.3786C2.31607 16.9413 2 17.7043 2 18.5V28.5C2 28.7652 2.10536 29.0195 2.29289 29.2071C2.48043 29.3946 2.73478 29.5 3 29.5H29C29.2652 29.5 29.5196 29.3946 29.7071 29.2071C29.8946 29.0195 30 28.7652 30 28.5V18.5C30 17.7043 29.6839 16.9413 29.1213 16.3786C28.5587 15.816 27.7956 15.5 27 15.5ZM4 18.5C4 18.2347 4.10536 17.9804 4.29289 17.7929C4.48043 17.6053 4.73478 17.5 5 17.5H9V27.5H4V18.5ZM11 16.5V7.99996L16 4.69996L21 7.99996V27.5H11V16.5ZM28 27.5H23V17.5H27C27.2652 17.5 27.5196 17.6053 27.7071 17.7929C27.8946 17.9804 28 18.2347 28 18.5V27.5Z" fill="#263238"/>
</svg>`)
        .style("border-color", color2(d.data.name));
      }
      else if(d.data.name === "非營利組織/藝術團體") {
        tooltip
        .style("opacity", 1)
        .html(`非營利組織/藝術團體<br><svg width="64px" height="64px" viewBox="0 0 1024 1024" class="icon"  version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M256 448m-106.666667 0a106.666667 106.666667 0 1 0 213.333334 0 106.666667 106.666667 0 1 0-213.333334 0Z" fill="#FFA726" /><path d="M42.666667 740.266667s59.733333-134.4 213.333333-134.4 213.333333 134.4 213.333333 134.4V810.666667H42.666667v-70.4zM981.333333 740.266667s-59.733333-134.4-213.333333-134.4-213.333333 134.4-213.333333 134.4V810.666667h426.666666v-70.4z" fill="#455A64" /><path d="M512 362.666667m-128 0a128 128 0 1 0 256 0 128 128 0 1 0-256 0Z" fill="#FFB74D" /><path d="M768 727.466667s-70.4-160-256-160-256 160-256 160V810.666667h512v-83.2z" fill="#607D8B" /><path d="M768 448m-106.666667 0a106.666667 106.666667 0 1 0 213.333334 0 106.666667 106.666667 0 1 0-213.333334 0Z" fill="#FFA726" /><path d="M256 448m-106.666667 0a106.666667 106.666667 0 1 0 213.333334 0 106.666667 106.666667 0 1 0-213.333334 0Z" fill="#FFA726" /><path d="M768 448m-106.666667 0a106.666667 106.666667 0 1 0 213.333334 0 106.666667 106.666667 0 1 0-213.333334 0Z" fill="#FFA726" /></svg>`)
        .style("border-color", color2(d.data.name));
      }
      else
      {
        tooltip
        .style("opacity", 1)
        .html(`${d.data.name}`)
        .style("border-color", color2(d.data.name));
      }
    })
    .on("mousemove", (evt, d) => {
      tooltip
        .style("top", evt.pageY - 10 + "px")
        .style("left", evt.pageX + 10 + "px");
    })
    .on("mouseout", () => {
      tooltip.style("opacity", 0);
    })
    .on("mouseenter", (event, d) => {
      // Get the ancestors of the current segment, minus the root

      //introduce
      if(d.data.name === "工作室")
      {
        div
          .html("<ul><li>定義：藝術家創作藝術品的私人空間。它可以是一個房間、一棟建築或任何專為藝術製作而設的場所。</li><li>功能：用於藝術家進行創作，例如繪畫、雕塑或任何其他形式的藝術。</li><li>特色：它是一個私密的空間，藝術家可以在這裡自由地實驗、嘗試並發展他們的技巧和創意。</li></ul>");
      }
      else if(d.data.name === "替代空間")
      {
        div
          .html("<ul><li>定義：非傳統和非商業的展示空間。可以是臨時或長期的存在，但不同於傳統的美術館和畫廊。</li><li>功能：提供一個展示非主流、實驗性或邊緣藝術的場所。這些空間通常更加開放、靈活，能夠接受更多風格和形式的藝術品。</li><li>特色：是藝術家、策展人或社群自組、自發的，對於藝術家來說，這樣的空間提供了更多的自由和可能性。</li></ul>");
      }
      else if(d.data.name === "美術館")
      {
        div
          .html("<ul><li>定義：為了展示、保護和研究藝術品而設立的公共或私人機構。</li><li>功能：除了展示藝術品，美術館也負責藝術品的保護、修復、研究和教育等功能。</li><li>特色：通常有較為正式和嚴謹的運作模式。它們可能有長期或特定主題的展覽，且會對藝術品有一定的選擇和評價標準。</li></ul>");
      }
      else if(d.data.name === "北部")
      {
        div
          .html("包括臺北市、新北市、基隆市、新竹市、桃園市、新竹縣及宜蘭縣。");
      }
      else if(d.data.name === "中部")
      {
        div
          .html("包括臺中市、苗栗縣、彰化縣、南投縣及雲林縣。");
      }
      else if(d.data.name === "南部")
      {
        div
          .html("包括高雄市、臺南市、嘉義市、嘉義縣、屏東縣及澎湖縣。");
      }
      else if(d.data.name === "替代空間")
      {
        div
          .html("<ul><li>定義：非傳統和非商業的展示空間。可以是臨時或長期的存在，但不同於傳統的美術館和畫廊。</li><li>功能：提供一個展示非主流、實驗性或邊緣藝術的場所。這些空間通常更加開放、靈活，能夠接受更多風格和形式的藝術品。</li><li>特色：是藝術家、策展人或社群自組、自發的，對於藝術家來說，這樣的空間提供了更多的自由和可能性。</li></ul>");
      }else if(d.data.name === "東部")
      {
        div
          .html("包括花蓮縣及臺東縣。");
      }
      else if(d.data.name === "國外")
      {
        div
          .html("臺灣以外ㄉ國家");
      }
      else
      {
        div.html("");
      }
      
      //dataValue
      label
        .style("visibility", null)
        .select(".dataValue")
        .text("計數："+d.value);
      
      //question
      if(d.depth-1 === 0)
      {
        label
          .style("visibility", null)
          .select(".question1")
          .attr("fill", "#000");
        label
          .style("visibility", null)
          .select(".question2")
          .attr("fill", "#BBB");
      }
      else if(d.depth-1 === 1)
      {
        label
          .style("visibility", null)
          .select(".question1")
          .attr("fill", "#BBB");
        label
          .style("visibility", null)
          .select(".question2")
          .attr("fill", "#000");
      }
      
      const sequence = d
        .ancestors()
        .reverse()
        .slice(1);
      // Highlight the ancestors
      path.attr("fill-opacity", node =>
        sequence.indexOf(node) >= 0 ? 1.0 : 0.3
      );
      label
        .style("visibility", null)
        .select(".sequence")
        //.style("visibility", "visible")
        .attr("fill", sequence => color2(d.data.name))
        .text(d.data.name);
      const percentage = ((100 * d.value) / root.value).toPrecision(3);
      label
        .style("visibility", null)
        .select(".percentage")
        .text(percentage + "%");

      /*tooltip
        .text(d.data.name);*/
      
      // Update the value of this view with the currently hovered sequence and percentage
      element.value = { sequence, percentage };
      element.dispatchEvent(new CustomEvent("input"));
    });     

  return element;
}


function _8(md){return(
md`## 結論
### 從上圖中，我們可以看出：
- ### 在藝術工作者中，其工作地點在北部占了多數
- ### 在北、中、東部和國外，以工作室的藝術工作者為主；而南部以替代空間的藝術工作者為主
- ### 北部擁有最多類型的藝術工作者`
)}

function _buildHierarchy2(){return(
function buildHierarchy2(csv) {
  // Helper function that transforms the given CSV into a hierarchical format.
  const root = { name: "root", children: [] };
  for (let i = 0; i < csv.length; i++) {
    const sequence = csv[i][0];
    const size = +csv[i][1];
    if (isNaN(size)) {
      // e.g. if this is a header row
      continue;
    }
    const parts = sequence.split("-");
    let currentNode = root;
    for (let j = 0; j < parts.length; j++) {
      const children = currentNode["children"];
      const nodeName = parts[j];
      let childNode = null;
      if (j + 1 < parts.length) {
        // Not yet at the end of the sequence; move down the tree.
        let foundChild = false;
        for (let k = 0; k < children.length; k++) {
          if (children[k]["name"] == nodeName) {
            childNode = children[k];
            foundChild = true;
            break;
          }
        }
        // If we don't already have a child node for this branch, create it.
        if (!foundChild) {
          childNode = { name: nodeName, children: [] };
          children.push(childNode);
        }
        currentNode = childNode;
      } else {
        // Reached the end of the sequence; create a leaf node.
        childNode = { name: nodeName, value: size };
        children.push(childNode);
      }
    }
  }
  return root;
}
)}

function _width(){return(
640
)}

function _radius(width){return(
width / 2
)}

function _partition(d3,radius){return(
data =>
  d3.partition().size([2 * Math.PI, radius * radius])(
    d3
      .hierarchy(data)
      .sum(d => d.value)
      .sort((a, b) => b.value - a.value)
  )
)}

function _mousearc(d3,radius){return(
d3
  .arc()
  .startAngle(d => d.x0)
  .endAngle(d => d.x1)
  .innerRadius(d => Math.sqrt(d.y0))
  .outerRadius(radius)
)}

function _color2(d3){return(
d3
  .scaleOrdinal()
  .domain(["北部", "中部", "南部", "東部", "國外", "工作室", "非營利組織/藝術團體", "美術館", "替代空間"])
  //.range(d3.schemePaired)
  .range(["#DC9FB4","#D05A6E","#E16B8C","#B5495B","#8E354A","#B28FCE","#B481BB","#986DB2","#8F77B5"])
  .unknown("#BEBEBE")
)}

function _arc(d3,radius){return(
d3
  .arc()
  .startAngle(d => d.x0)
  .endAngle(d => d.x1)
  .padAngle(1 / radius)
  .padRadius(radius)
  .innerRadius(d => Math.sqrt(d.y0))
  .outerRadius(d => Math.sqrt(d.y1) - 1)
)}

function _breadcrumbWidth(){return(
75
)}

function _breadcrumbHeight(){return(
30
)}

function _breadcrumbPoints(breadcrumbWidth,breadcrumbHeight){return(
function breadcrumbPoints(d, i) {
  const tipWidth = 10;
  const points = [];
  points.push("0,0");
  points.push(`${breadcrumbWidth},0`);
  points.push(`${breadcrumbWidth + tipWidth},${breadcrumbHeight / 2}`);
  points.push(`${breadcrumbWidth},${breadcrumbHeight}`);
  points.push(`0,${breadcrumbHeight}`);
  if (i > 0) {
    // Leftmost breadcrumb; don't include 6th vertex.
    points.push(`${tipWidth},${breadcrumbHeight / 2}`);
  }
  return points.join(" ");
}
)}

function _19(htl){return(
htl.html`<style>
.tooltip {
  padding: 8px 12px;
  color: white;
  border-radius: 6px;
  border: 2px solid rgba(255,255,255,0.5);
  box-shadow: 0 1px 4px 0 rgba(0,0,0,0.2);
  pointer-events: none;
  transform: translate(-50%, -100%);
  font-family: "Helvetica", sans-serif;
  background: rgba(20,10,30,0.6);
  transition: 0.2s opacity ease-out, 0.1s border-color ease-out;
}
</style>`
)}

export default function define(runtime, observer) {
  const main = runtime.module();
  function toString() { return this.url; }
  const fileAttachments = new Map([
    ["artist-1-1.csv", {url: new URL("./artist.csv", import.meta.url), mimeType: "text/csv", toString}]
  ]);
  main.builtin("FileAttachment", runtime.fileAttachments(name => fileAttachments.get(name)));
  main.variable(observer()).define(["md"], _1);
  main.variable(observer("artist")).define("artist", ["__query","FileAttachment","invalidation"], _artist);
  main.variable(observer("innerCircleQuestion2")).define("innerCircleQuestion2", ["artist"], _innerCircleQuestion2);
  main.variable(observer("outerCircleQuestion2")).define("outerCircleQuestion2", ["artist"], _outerCircleQuestion2);
  main.variable(observer("data2")).define("data2", ["artist","innerCircleQuestion2","outerCircleQuestion2","buildHierarchy2"], _data2);
  main.variable(observer("breadcrumb2")).define("breadcrumb2", ["d3","breadcrumbWidth","breadcrumbHeight","sunburst2","breadcrumbPoints","color2"], _breadcrumb2);
  main.variable(observer("viewof sunburst2")).define("viewof sunburst2", ["partition","data2","d3","radius","innerCircleQuestion2","outerCircleQuestion2","width","color2","arc","mousearc"], _sunburst2);
  main.variable(observer("sunburst2")).define("sunburst2", ["Generators", "viewof sunburst2"], (G, _) => G.input(_));
  main.variable(observer()).define(["md"], _8);
  main.variable(observer("buildHierarchy2")).define("buildHierarchy2", _buildHierarchy2);
  main.variable(observer("width")).define("width", _width);
  main.variable(observer("radius")).define("radius", ["width"], _radius);
  main.variable(observer("partition")).define("partition", ["d3","radius"], _partition);
  main.variable(observer("mousearc")).define("mousearc", ["d3","radius"], _mousearc);
  main.variable(observer("color2")).define("color2", ["d3"], _color2);
  main.variable(observer("arc")).define("arc", ["d3","radius"], _arc);
  main.variable(observer("breadcrumbWidth")).define("breadcrumbWidth", _breadcrumbWidth);
  main.variable(observer("breadcrumbHeight")).define("breadcrumbHeight", _breadcrumbHeight);
  main.variable(observer("breadcrumbPoints")).define("breadcrumbPoints", ["breadcrumbWidth","breadcrumbHeight"], _breadcrumbPoints);
  main.variable(observer()).define(["htl"], _19);
  return main;
}
